version: '3.7'

services:
  client: 
    stdin_open: true
    container_name: staging-client
    build: 
      context: ./client
      dockerfile: Dockerfile.prod
      # Forward environment value for the server url.
      args:
        - REACT_APP_CUSTOM_URL
    volumes:
      - /usr/src/client/node_modules
      - type: volume
        source: client_build
        target: /usr/src/client/build

  server:
    container_name: staging-cradle
    build: 
      context: ./
      dockerfile: ./server/Dockerfile.prod
    command: gunicorn -c ./prod/gunicorn.conf.py app:app
    # Save the server and pip packages as docker volumes to reduce memory usage
    # of the container.
    volumes: 
      - cradle_logs:/var/log
      - ./server:/usr/src/server
      - /usr/local/bin/ 
    expose:
      - 5000
    environment:
      - DB_USERNAME
      - DB_PASSWORD
      - DB_HOSTNAME
      - DB_PORT
      - DB_NAME
      - EMAIL_USER
      - EMAIL_PASSWORD
      - REACT_APP_CUSTOM_URL=cmpt373-lockdown.cs.surrey.sfu.ca
      - PORT=5000
    networks: 
      - db_network
      - default

  nginx:
    container_name: staging-nginx
    image: nginx:1.17-alpine
    depends_on:
      - client
      - server
    volumes:
      - type: volume
        source: client_build
        target: /usr/share/nginx/html
      - ./nginx/nginx-staging.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
    ports:
      - 80:80
      - 443:443
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
volumes:
  cradle_logs:
  client_build:

networks: 
  db_network:
    external: true
    name: db_network
