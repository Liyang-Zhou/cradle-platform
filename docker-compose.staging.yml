version: '3.7'

services:
  client: 
    container_name: staging-client
    build: 
      context: ./client
      dockerfile: Dockerfile.prod
      args:
        REACT_APP_USE_STAGING_SERVER: 1
    volumes:
      - '/usr/src/client/node_modules'
      - type: volume
        source: client_build
        target: /usr/src/client/build

  server:
    container_name: staging-cradle
    build: 
      context: ./
      dockerfile: ./server/Dockerfile.prod
    command: gunicorn -c ./prod/gunicorn.conf.py app:app
    volumes: # save the server and pip packages as docker volumes to reduce memory usage of container
      - cradle_logs:/var/log
      - ./server:/usr/src/server
      - /usr/local/bin/ 
    expose:
      - 5000
    env_file:
      - ./server/.env.prod
    environment:
      - PORT=5000
    networks: 
      - db_network
      - default

    # Do not create separate DB containers for prod and testing, use one single MySQL container with two different databases
  # db:
  #   container_name: staging-mysql
  #   image: mysql
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #   expose:
  #     - 3306
  #   env_file:
  #     - ./server/.env.prod.db

  nginx:
    container_name: staging-nginx
    image: nginx:1.17-alpine
    depends_on:
      - client
      - server
    volumes:
      - type: volume
        source: client_build
        target: /usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssh/certbot/conf:/etc/letsencrypt
      - ./ssh/certbot/www:/var/www/certbot
    ports:
      - 4443:443
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  certbot:
    container_name: staging-certbot
    image: certbot/certbot
    volumes:
      - ./ssh/certbot/conf:/etc/letsencrypt
      - ./ssh/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  mysql_data:
  cradle_logs:
  client_build:

networks: 
  db_network:
    external: true
    name: db_network
