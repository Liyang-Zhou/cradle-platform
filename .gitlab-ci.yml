stages:
    - build
    - test
    - deploy

before_script:
    - cd /var/www/cradle-platform
    - pwd
    - whoami
    - echo CI_MERGE_REQUEST_ID:$CI_MERGE_REQUEST_ID
    - echo CI_COMMIT_BRANCH:$CI_COMMIT_BRANCH
    - echo CI_MERGE_REQUEST_SOURCE_BRANCH_NAME:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - BRANCH_NAME="$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
    - if [ -z "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME" ]; then BRANCH_NAME=$CI_COMMIT_BRANCH; fi
    - echo BRANCH_NAME:$BRANCH_NAME
    - git checkout $BRANCH_NAME
    - git branch
    - git fetch --all
    - git reset --hard origin/$BRANCH_NAME

build:
    stage: build
    script:
        - echo "Building project..."
        - docker-compose -f docker-compose.prod.yml build
    rules:
        - if: $CI_MERGE_REQUEST_ID
        - if: $CI_COMMIT_BRANCH == "production"
        - if: $CI_COMMIT_BRANCH == "staging"
        - if: $CI_COMMIT_BRANCH == "master" 

test:
    stage: test
    script:
        - echo "Running tests..."
    rules:
        - if: $CI_MERGE_REQUEST_ID
        - if: $CI_COMMIT_BRANCH == "production"
        - if: $CI_COMMIT_BRANCH == "staging"
        - if: $CI_COMMIT_BRANCH == "master" 

deploy-prod:
    stage: deploy
    script: 
        - echo "Deploying project to production..."
        - docker-compose -f docker-compose.prod.yml down
        - docker volume rm prod_client_build 
        - docker-compose -p "prod" -f docker-compose.prod.yml up -d --force-recreate
    rules:
        - if: $CI_COMMIT_BRANCH == "production"
        - if: $CI_COMMIT_BRANCH == "master"
          when: manual 
    environment: production

deploy-staging:
    stage: deploy
    script: 
        - echo "Deploying project to staging..."
        - docker-compose -f docker-compose.staging.yml build
        - docker-compose -f docker-compose.staging.yml down
        - docker volume rm staging_client_build
        - docker-compose -p "staging" -f docker-compose.staging.yml up -d --force-recreate
    rules:
        - if: '$CI_COMMIT_BRANCH == "master"'
    environment: staging
